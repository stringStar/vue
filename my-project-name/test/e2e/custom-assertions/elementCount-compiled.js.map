{"version":3,"sources":["elementCount.js"],"names":[],"mappings":";AAQA,QAAQ,SAAR,GAAoB,UAAU,QAAV,EAAoB,KAApB,EAA2B;AAC7C,OAAK,OAAL,GAAe,yBAAyB,QAAzB,GAAoC,eAApC,GAAsD,KAArE;AACA,OAAK,QAAL,GAAgB,KAAhB;AACA,OAAK,IAAL,GAAY,UAAU,GAAV,EAAe;AACzB,WAAO,QAAQ,KAAK,QAApB;AACD,GAFD;AAGA,OAAK,KAAL,GAAa,UAAU,GAAV,EAAe;AAC1B,WAAO,IAAI,KAAX;AACD,GAFD;AAGA,OAAK,OAAL,GAAe,UAAU,EAAV,EAAc;AAC3B,QAAI,OAAO,IAAX;AACA,WAAO,KAAK,GAAL,CAAS,OAAT,CAAiB,UAAU,QAAV,EAAoB;AAC1C,aAAO,SAAS,gBAAT,CAA0B,QAA1B,EAAoC,MAA3C;AACD,KAFM,EAEJ,CAAC,QAAD,CAFI,EAEQ,UAAU,GAAV,EAAe;AAC5B,SAAG,IAAH,CAAQ,IAAR,EAAc,GAAd;AACD,KAJM,CAAP;AAKD,GAPD;AAQD,CAjBD","file":"elementCount-compiled.js","sourcesContent":["// A custom Nightwatch assertion.\n// the name of the method is the filename.\n// can be used in tests like this:\n//\n//   browser.assert.elementCount(selector, count)\n//\n// for how to write custom assertions see\n// http://nightwatchjs.org/guide#writing-custom-assertions\nexports.assertion = function (selector, count) {\n  this.message = 'Testing if element <' + selector + '> has count: ' + count\n  this.expected = count\n  this.pass = function (val) {\n    return val === this.expected\n  }\n  this.value = function (res) {\n    return res.value\n  }\n  this.command = function (cb) {\n    var self = this\n    return this.api.execute(function (selector) {\n      return document.querySelectorAll(selector).length\n    }, [selector], function (res) {\n      cb.call(self, res)\n    })\n  }\n}\n"]}